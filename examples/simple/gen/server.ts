/**
 * This file was auto-generated by openapi-typescript-server.
 * Do not make direct changes to the file.
 */

import type { paths } from "./schema.d.ts";
import type { Route } from "openapi-typescript-server";
import { NotImplementedError } from "openapi-typescript-server";

export interface ListPetsArgs<Req, Res> {
  parameters: paths['/pets']['get']['parameters'];
  requestBody: paths['/pets']['get']['requestBody'];
  req: Req;
  res: Res;
}

interface ListPetsResult200 {
  content: { 200: paths['/pets']['get']['responses']['200']['content'] };
  headers?: { [name: string]: any };
}

interface ListPetsResultDefault {
  content: { default: paths['/pets']['get']['responses']['default']['content'] };
  headers?: { [name: string]: any };
  status: number;
}

export type ListPetsResult = Promise<ListPetsResult200 | ListPetsResultDefault>;

export async function listPetsUnimplemented(): ListPetsResult {
  throw new NotImplementedError()
}

export interface GetPetByIdArgs<Req, Res> {
  parameters: paths['/pet/{petId}']['get']['parameters'];
  requestBody: paths['/pet/{petId}']['get']['requestBody'];
  req: Req;
  res: Res;
}

interface GetPetByIdResult200 {
  content: { 200: paths['/pet/{petId}']['get']['responses']['200']['content'] };
  headers?: { [name: string]: any };
}

interface GetPetByIdResultDefault {
  content: { default: paths['/pet/{petId}']['get']['responses']['default']['content'] };
  headers?: { [name: string]: any };
  status: number;
}

export type GetPetByIdResult = Promise<GetPetByIdResult200 | GetPetByIdResultDefault>;

export async function getPetByIdUnimplemented(): GetPetByIdResult {
  throw new NotImplementedError()
}

export interface UpdatePetWithFormArgs<Req, Res> {
  parameters: paths['/pet/{petId}']['post']['parameters'];
  requestBody: paths['/pet/{petId}']['post']['requestBody'];
  req: Req;
  res: Res;
}

interface UpdatePetWithFormResult200 {
  content: { 200: paths['/pet/{petId}']['post']['responses']['200']['content'] };
  headers?: { [name: string]: any };
}

interface UpdatePetWithFormResultDefault {
  content: { default: paths['/pet/{petId}']['post']['responses']['default']['content'] };
  headers?: { [name: string]: any };
  status: number;
}

export type UpdatePetWithFormResult = Promise<UpdatePetWithFormResult200 | UpdatePetWithFormResultDefault>;

export async function updatePetWithFormUnimplemented(): UpdatePetWithFormResult {
  throw new NotImplementedError()
}

export interface Server<Req = unknown, Res = unknown> {
  listPets: (
    args: ListPetsArgs<Req, Res>
  ) => ListPetsResult;
  getPetById: (
    args: GetPetByIdArgs<Req, Res>
  ) => GetPetByIdResult;
  updatePetWithForm: (
    args: UpdatePetWithFormArgs<Req, Res>
  ) => UpdatePetWithFormResult;
}

export function registerRouteHandlers<Req, Res>(server: Server<Req, Res>): Route[] {
  return [
    {
      method: "get",
      path: "/pets",
      handler: server.listPets,
    },
    {
      method: "get",
      path: "/pet/{petId}",
      handler: server.getPetById,
    },
    {
      method: "post",
      path: "/pet/{petId}",
      handler: server.updatePetWithForm,
    },
  ]
}
